// Based on http://www.w3schools.com/cssref/default.asp properties
// Prefixes reference: http://peter.sh/experiments/vendor-prefixed-css-property-overview/

//
// Background Properties
//
.background-clip(@clip: border-box) {
    background-clip: @clip;
    -webkit-background-clip: @clip;
}

.background-origin(@origin: border-box) {
    background-origin: @origin;
    -webkit-background-origin: @origin;
}

.background-size(@size_x, @size_y) {
    background-size: @size_x @size_y;
    -webkit-background-size: @size_x, @size_y;
}
.background-size(@size) {
    .background-size(@size, @size);
}

//
// Border and Outline Properties
//
.border-radius(@radius) {
    border-radius: @radius;
    -moz-border-radius: @radius;
    -webkit-border-radius: @radius;
}

.border-top-left-radius(@radius: 0) {
    border-top-left-radius: @radius;
    -moz-border-top-left-radius: @radius;
    -webkit-border-top-left-radius: @radius;
}

.border-top-right-radius(@radius: 0) {
    border-top-right-radius: @radius;
    -moz-border-top-left-radius: @radius;
    -webkit-border-top-left-radius: @radius;
}

.border-bottom-left-radius(@radius: 0) {
    border-bottom-left-radius: @radius;
    -moz-border-bottom-left-radius: @radius;
    -webkit-border-bottom-left-radius: @radius;
}

.border-bottom-right-radius(@radius: 0) {
    border-bottom-right-radius: @radius;
    -moz-border-bottom-left-radius: @radius;
    -webkit-border-bottom-left-radius: @radius;
}

.border-image(@source, @slice, @width, @outset, @repeat) {
    border-image: url('{@source}') @slice @width @outset @repeat;
    -moz-border-image: url('{@source}') @slice @width @outset @repeat;
    -webkit-border-image: url('{@source}') @slice @width @outset @repeat;
    -o-border-image: url('{@source}') @slice @width @outset @repeat;
}

// .border-image-outset
// .border-image-repeat
// .border-image-slice
// .border-image-source
// .border-image-width

.box-shadow (@x: 0, @y: 0, @blur: 1px, @color: #000) {
  box-shadow: @arguments;
  -moz-box-shadow: @arguments;
  -webkit-box-shadow: @arguments;
}

//
// Box Properties
//
.overflow-x(@of) {
    overflow-x: @of;
    -ms-overflow-x: @of;
}

.overflow-y(@of) {
    overflow-y: @of;
    -ms-overflow-y: @of;
}

// .overflow-style
// .rotation
// .rotation-point

//
// Color Properties
//

// .color-profile

.opacity(@op: 1) {
    @opPrct: @op * 100;

    opacity: @op;
    -webkit-opacity: @op;
    -moz-opacity: @op;
    -khtml-opacity: @op;
    -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(Opacity=@{opPrct})";
    filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opPrct})";
    filter: alpha(opacity=@opPrct);
}

// .rendering-intent

//
// Flexible Box Properties
//
.display-box() {
    display: box;
    display: -moz-box;
    display: -webkit-box;
    display: -ms-box; 
}

.box-align(@align: stretch) {
    box-align: @align;
    -moz-box-align: @align;
    -webkit-box-align: @align;
    -ms-box-align: @align;
}

.box-direction(@direction: normal) {
    box-direction: @direction;
    -moz-box-direction: @direction;
    -webkit-box-direction: @direction;
    -ms-box-direction: @direction;
}

.box-flex(@flex: 0.0) {
    box-flex: @flex;
    -moz-box-flex: @flex;
    -webkit-box-flex: @flex;
    -ms-box-flex: @flex;
}

// .box-flex-group
// .box-lines

.box-ordinal-group(@ordinal-group: 1) {
    box-ordinal-group: @ordinal-group;
    -moz-box-ordinal-group: @ordinal-group;
    -webkit-box-ordinal-group: @ordinal-group;
    -ms-box-ordinal-group: @ordinal-group;
}

.box-orient(@orient: inline-axis) {
    box-orient: @orient;
    -moz-box-orient: @orient;
    -webkit-box-orient: @orient;
    -ms-box-orient: @orient;
}

.box-pack(@pack: start) {
    box-pack: @pack;
    -moz-box-pack: @pack;
    -webkit-box-pack: @pack;
    -ms-box-pack: @pack;
}

//
// Font Properties
//
// .@font-face
// .font-size-adjust
// .font-stretch

//
// Multi-column Properties
//
.columns(@count: auto, @width: auto) {
    columns: @arguments;
    -moz-columns: @arguments;
    -webkit-columns: @arguments;
}

.column-width(@width: auto) {
    column-width: @width;
    -moz-column-width: @width;
    -webkit-column-width: @width;
}

.column-count(@count: auto) {
    column-count: @count;
    -moz-column-count: @count;
    -webkit-column-count: @count;
}

// .column-fill

.column-gap(@gap: normal) {
    column-gap: @gap;
    -moz-column-gap: @gap;
    -webkit-column-gap: @gap;
}

.column-rule(@width: medium, @style: none, @color: black) {
    column-rule: @arguments;
    -moz-column-rule: @arguments;
    -webkit-column-rule: @arguments;
}

.column-rule-width(@width: medium) {
    column-rule-width: @width;
    -moz-column-rule-width: @width;
    -webkit-column-rule-width: @width;
}

.column-rule-style(@style: medium) {
    column-rule-style: @style;
    -moz-column-rule-style: @style;
    -webkit-column-rule-style: @style;
}

.column-rule-color(@color: medium) {
    column-rule-color: @color;
    -moz-column-rule-color: @color;
    -webkit-column-rule-color: @color;
}

.column-span(@span: 1) {
    column-span: @span;
    -webkit-column-span: @span;
}

//
// Text Properties
//
// .hanging-punctuation
// .punctuation-trim

.text-justify(@justify) {
    text-justify: @justify;
    -ms-text-justify: @justify;
}

// .text-outline

.text-overflow(@overflow) {
    text-overflow: @overflow;
    -ms-text-overflow: @overflow;
}

// .text-shadow
// .text-wrap

.word-break(@break) {
    word-break: @word-break;
    -epub-word-break: @word-break;
    -ms-word-break: @word-break;
}

.word-wrap(@wrap) {
    word-wrap: @wrap;
    -ms-word-wrap: @wrap;
}

//
// 2D/3D Transform Properties
//

.transform(@transform) {
    transform: @transform;
    -ms-transform: @transform;
    -moz-transform: @transform;
    -webkit-transform: @transform;
    -o-transform: @transform;
}

.t-matrix(@n1, @n2, @n3, @n4, @n5, @n6) {
    .transform(matrix(@n1, @n2, @n3, @n4, @n5, @n6));
}

.t-matrix3d(@n1, @n2, @n3, @n4, @n5, @n6, @n7, @n8, @n9, @n10, @n11, @n12, @n13, @n14, @n15, @n16) {
    .transform(matrix3d(@n1, @n2, @n3, @n4, @n5, @n6, @n7, @n8, @n9, @n10, @n11, @n12, @n13, @n14, @n15, @n16));
}

.t-translate(@x, @y) {
    .transform(translate(@x, @y));
}

.t-translate3d(@x, @y, @z) {
    .transform(translate3d(@x, @y, @z));
}

.t-translateX(@x) {
    .transform(translateX(@x));
}

.t-translateY(@y) {
    .transform(translateY(@y));
}

.t-translateZ(@z) {
    .transform(translateZ(@z));
}

.t-scale(@x, @y) {
    .transform(scale(@x, @y));
}

.t-scale3d(@x, @y, @z) {
    .transform(scale3d(@x, @y, @z));
}

.t-scaleX(@x) {
    .transform(scaleX(@x));
}

.t-scaleY(@y) {
    .transform(scaleY(@y));
}

.t-scaleZ(@z) {
    .transform(scaleZ(@z));
}

.t-rotate(@angle) {
    .transform(rotate(@angle));
}

.t-rotate3d(@x, @y, @z, @angle) {
    .transform(rotate3d(@x, @y, @z, @angle));
}

.t-rotateX(@angle) {
    .transform(rotateX(@angle));
}

.t-rotateY(@angle) {
    .transform(rotateY(@angle));
}

.t-rotateZ(@angle) {
    .transform(rotateZ(@angle));
}

.t-skew(@x-angle, @y-angle) {
    .transform(skew(@x-angle, @y-angle));
}

.t-skewX(@x-angle) {
    .transform(skewX(@x-angle));
}

.t-skewY(@y-angle) {
    .transform(skewY(@y-angle));
}

.t-perspective(@n) {
    .transform(perspective(@n));
}

.transform-origin(@x-axis: 50%, @y-axis: 50%, @z-axis: 0) {
    transform-origin: @arguments;
    -ms-transform-origin: @arguments;
    -webkit-transform-origin: @arguments;
    -moz-transform-origin: @arguments;
    -o-transform-origin: @arguments;
}

.transform-style(@style: flat) {
    transform-style: @style;
    -ms-transform-style: @style;
    -webkit-transform-style: @style;
    -moz-transform-style: @style;
    -o-transform-style: @style;
}

.perspective(@perspective: none) {
    perspective: @perspective;
    -ms-perspective: @perspective;
    -webkit-perspective: @perspective;
    -moz-perspective: @perspective;
    -o-perspective: @perspective;
}

.perspective-origin(@x-axis: 50%, @y-axis: 50%) {
    perspective-origin: @arguments;
    -ms-perspective-origin: @arguments;
    -webkit-perspective-origin: @arguments;
    -moz-perspective-origin: @arguments;
    -o-perspective-origin: @arguments;
}

.backface-visibility(@visibility: visible) {
    backface-visibility: @visibility;
    -ms-backface-visibility: @visibility;
    -webkit-backface-visibility: @visibility;
    -moz-backface-visibility: @visibility;
    -o-backface-visibility: @visibility;
}

//
// Transition Properties
//
.transition(@property: all, @duration: 0, @timing-function: ease, @delay: 0) {
    transition: @arguments;
    -ms-transition: @arguments;
    -webkit-transition: @arguments;
    -moz-transition: @arguments;
    -o-transition: @arguments;
}

.transition-property(@property: all) {
    transition-property: @property;
    -ms-transition-property: @property;
    -webkit-transition-property: @property;
    -moz-transition-property: @property;
    -o-transition-property: @property;
}

.transition-duration(@duration: 0) {
    transition-duration: @duration;
    -ms-transition-duration: @duration;
    -webkit-transition-duration: @duration;
    -moz-transition-duration: @duration;
    -o-transition-duration: @duration;
}

.transition-timing-function(@timing-function: 0) {
    transition-timing-function: @timing-function;
    -ms-transition-timing-function: @timing-function;
    -webkit-transition-timing-function: @timing-function;
    -moz-transition-timing-function: @timing-function;
    -o-transition-timing-function: @timing-function;
}

.transition-delay(@delay: 0) {
    transition-delay: @delay;
    -ms-transition-delay: @delay;
    -webkit-transition-delay: @delay;
    -moz-transition-delay: @delay;
    -o-transition-delay: @delay;
}

//
// User-interface Properties
//
.appearance(@appearance) {
    appearance: @appearance;
    -moz-appearance: @appearance;
    -webkit-appearance: @appearance;
}

.box-sizing(@sizing) {
    box-sizing: @sizing;
    -moz-box-sizing: @sizing;
    -webkit-box-sizing: @sizing;
}

// .icon

// .nav-down
// .nav-index
// .nav-left
// .nav-right
// .nav-up
.clear {
    clear: both;
}